{"version":3,"sources":["components/shared/layout/Layout.js","types/giphyTypes.js","components/searchItem/SearchItem.js","components/shared/spinner/Spinner.js","components/searchResults/SearchResults.js","components/shared/infiniteScroll/InfiniteScroll.js","config.js","services/RequestService.js","actions/searchParamsActions.js","reducers/searchParamsReducer.js","services/GiphyService.js","reducers/searchResultsReducer.js","actions/searchActions.js","containers/searchResultsContainer/SearchResultsContainer.js","components/searchSummary/SearchSummary.js","containers/searchSummaryContainer/SearchSummaryContainer.js","components/searchPage/SearchPage.js","services/RouterService.js","Routes.js","components/searchForm/SearchForm.js","containers/searchFormContainer/SearchFormContainer.js","components/shared/header/Header.js","App.js","types/reduxTypes.js","reducers/rootReducer.js","store.js","index.js"],"names":["Layout","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","children","props","react_default","a","createElement","className","React","Component","gifImagePropType","PropTypes","shape","url","string","width","height","size","mp4","mp4_size","webp","webp_size","gifImagesPropType","fixed_height_still","original_still","fixed_width","fixed_height_small_still","fixed_height_downsampled","preview","fixed_height_small","downsized_still","downsized","downsized_large","fixed_width_small_still","preview_webp","fixed_width_still","fixed_width_small","downsized_small","fixed_width_downsampled","downsized_medium","original","fixed_height","looping","original_mp4","preview_gif","SearchItem","title","_score","number","type","id","slug","bitly_gif_url","bitly_url","embed_url","username","source","rating","content_url","source_tld","source_post_url","is_sticker","import_datetime","trending_datetime","images","item","href","border","src","alt","Spinner","SearchResults","_this$props","searchItems","isLoading","Spinner_Spinner","searchItemsElements","map","gifEntity","SearchItem_SearchItem","defaultProps","InfiniteScroll","_getPrototypeOf2","_this","_len","length","args","Array","_key","call","concat","onScroll","activationDistance","onFetchMore","documentHeight","document","body","offsetHeight","window","innerHeight","scrollY","addEventListener","removeEventListener","env","objectSpread","process","APP_BASE_URL","REACT_APP_BASE_URL","GIPHY_API_KEY","REACT_APP_GIPHY_API_KEY","GIPHY_API_HOST","REACT_APP_GIPHY_API_HOST","REQUEST_TIMEOUT","HTTP_REQUEST_TIMEOUT","SEARCH_BATCH_SIZE","RequestService","params","undefined","axios","get","getDefaultAxiosConfig","timeout","SEARCH_PARAMS_ACTION_TYPES","UPDATE_SEARCH_QUERY","UPDATE_SEARCH_OFFSET","updateSearchQuery","searchQuery","payload","defaultSearchParams","query","limit","offset","lang","getSearchParamsFromState","state","searchParams","GiphyService","_ref","_ref$query","_ref$limit","_ref$offset","_ref$rating","_ref$lang","api_key","q","defaultSearchResults","data","pagination","meta","isFetchingMore","error","getSearchResultsFromState","searchResults","SEARCH_ACTION_TYPES","SEARCH","SEARCH_MORE","SEARCH_RESET","search","SearchResultsContainer","searchMoreCallback","searchMore","_this$props2","fetchMoreSpinner","InfiniteScroll_InfiniteScroll","SearchResults_SearchResults","mapDispatchToProps","batchSize","dispatch","getState","_getSearchResultsFrom","_getSearchResultsFrom2","totalCount","total_count","updateSearchOffset","connect","SearchSummary","total","SearchSummaryContainer","SearchSummary_SearchSummary","prototype","hasOwnProperty","SearchPage","searchSummaryContainer_SearchSummaryContainer","searchResultsContainer_SearchResultsContainer","RouterService","history","location","push","URLSearchParams","Routes","routerService","searchQueryFromLocationCallback","searchCallback","searchQueryFromLocation","getSearchQuery","Switch","Route","path","component","withRouter","SearchForm","onQueryChange","event","onSearchUpdate","target","onSearchSubmit","preventDefault","onSearchReset","resetElement","onClick","onSubmit","placeholder","onChange","spellCheck","autoCapitalize","autoComplete","maxLength","SearchFormContainer","pushSearchQuery","updateSearchQueryCallback","searchResetCallback","searchReset","SearchForm_SearchForm","HeaderRaw","Link","to","searchFormContainer_SearchFormContainer","Header","App","func","isRequired","subscribe","replaceReducer","store","es","BrowserRouter","basename","Layout_Layout","src_Routes","rootReducer","combineReducers","action","payloadData","ActionType","Pending","Fulfilled","toConsumableArray","Rejected","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middleware","applyMiddleware","promise","thunk","createStore","rootContainer","getElementById","ReactDOM","render","App_App"],"mappings":"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","file":"static/js/main.680bff90.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport class Layout extends React.Component {\n  static propTypes = {\n    children: PropTypes.oneOfType([\n      PropTypes.arrayOf(PropTypes.node),\n      PropTypes.node,\n    ]).isRequired,\n  };\n\n  render() {\n    const { children } = this.props;\n\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col\">\n            {children}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import PropTypes from 'prop-types';\n\n// PropType for Giphy Image entity.\nexport const gifImagePropType = PropTypes.shape({\n  url: PropTypes.string,\n  width: PropTypes.string,\n  height: PropTypes.string,\n  size: PropTypes.string,\n  mp4: PropTypes.string,\n  mp4_size: PropTypes.string,\n  webp: PropTypes.string,\n  webp_size: PropTypes.string,\n});\n\n// PropType for Giphy images set.\nexport const gifImagesPropType = PropTypes.shape({\n  fixed_height_still: gifImagePropType,\n  original_still: gifImagePropType,\n  fixed_width: gifImagePropType,\n  fixed_height_small_still: gifImagePropType,\n  fixed_height_downsampled: gifImagePropType,\n  preview: gifImagePropType,\n  fixed_height_small: gifImagePropType,\n  downsized_still: gifImagePropType,\n  downsized: gifImagePropType,\n  downsized_large: gifImagePropType,\n  fixed_width_small_still: gifImagePropType,\n  preview_webp: gifImagePropType,\n  fixed_width_still: gifImagePropType,\n  fixed_width_small: gifImagePropType,\n  downsized_small: gifImagePropType,\n  fixed_width_downsampled: gifImagePropType,\n  downsized_medium: gifImagePropType,\n  original: gifImagePropType,\n  fixed_height: gifImagePropType,\n  looping: gifImagePropType,\n  original_mp4: gifImagePropType,\n  preview_gif: gifImagePropType,\n});\n\n// PropType for the Giphy search result entity.\nexport const gifEntityPropType = PropTypes.shape({\n  title: PropTypes.string,\n  _score: PropTypes.number,\n  type: PropTypes.string,\n  id: PropTypes.string,\n  slug: PropTypes.string,\n  url: PropTypes.string,\n  bitly_gif_url: PropTypes.string,\n  bitly_url: PropTypes.string,\n  embed_url: PropTypes.string,\n  username: PropTypes.string,\n  source: PropTypes.string,\n  rating: PropTypes.string,\n  content_url: PropTypes.string,\n  source_tld: PropTypes.string,\n  source_post_url: PropTypes.string,\n  is_sticker: PropTypes.number,\n  import_datetime: PropTypes.string,\n  trending_datetime: PropTypes.string,\n  images: gifImagesPropType,\n});\n","import React from 'react';\nimport { gifEntityPropType } from '../../types/giphyTypes';\n\nexport class SearchItem extends React.Component {\n  static propTypes = {\n    item: gifEntityPropType.isRequired,\n  };\n\n  render() {\n    const { item } = this.props;\n\n    return (\n      <div className=\"card mb-3\">\n        <a href={item.url}>\n          <img\n            border=\"0\"\n            className=\"card-img-top\"\n            src={item.images.fixed_width.url}\n            alt={item.title}\n            title={item.title}\n          />\n        </a>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './spinner.css';\n\nexport class Spinner extends React.Component {\n  render() {\n    return (\n      <div className=\"spinner-container text-center\">\n        <div className=\"spinner\" />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { SearchItem } from '../searchItem/SearchItem';\nimport { Spinner } from '../shared/spinner/Spinner';\n\nexport class SearchResults extends React.Component {\n  static propTypes = {\n    searchItems: PropTypes.arrayOf(PropTypes.object),\n    isLoading: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    searchItems: [],\n    isLoading: false,\n  };\n\n  render() {\n    const { searchItems, isLoading } = this.props;\n\n    if (isLoading) {\n      return <Spinner />;\n    }\n\n    const searchItemsElements = searchItems.map(gifEntity => (\n      <SearchItem item={gifEntity} key={gifEntity.id} />\n    ));\n\n    return (\n      <div className=\"mb-3\">\n        {searchItemsElements}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst DEFAULT_ACTIVATION_DISTANCE = 50;\n\nexport class InfiniteScroll extends React.Component {\n  static propTypes = {\n    children: PropTypes.oneOfType([\n      PropTypes.arrayOf(PropTypes.node),\n      PropTypes.node,\n    ]).isRequired,\n    onFetchMore: PropTypes.func,\n    activationDistance: PropTypes.number,\n  };\n\n  static defaultProps = {\n    onFetchMore: () => {},\n    activationDistance: DEFAULT_ACTIVATION_DISTANCE,\n  };\n\n  componentDidMount() {\n    window.addEventListener('scroll', this.onScroll, false);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this.onScroll, false);\n  }\n\n  onScroll = () => {\n    const { activationDistance, onFetchMore } = this.props;\n\n    const documentHeight = document.body.offsetHeight;\n    const scrollHeight = window.innerHeight + window.scrollY;\n\n    if ((scrollHeight + activationDistance) >= documentHeight) {\n      onFetchMore();\n    }\n  };\n\n  render() {\n    const { children } = this.props;\n\n    return (\n      <div>\n        {children}\n      </div>\n    );\n  }\n}\n","// Shortcut for environment variables container.\nconst env = { ...process.env };\n\n// Base URL of the App. It allows putting the APP into sub-folders on the server.\nexport const APP_BASE_URL = env.REACT_APP_BASE_URL;\n\n// GIPHY API key.\nexport const GIPHY_API_KEY = env.REACT_APP_GIPHY_API_KEY;\n\n// GIPHY API Host.\nexport const GIPHY_API_HOST = env.REACT_APP_GIPHY_API_HOST;\n\n// HTTP request timeout in milliseconds.\nexport const REQUEST_TIMEOUT = env.HTTP_REQUEST_TIMEOUT;\n\n// How many Gif images we want to request per each HTTP request.\nexport const SEARCH_BATCH_SIZE = 30;\n","import axios from 'axios';\nimport { REQUEST_TIMEOUT } from '../config';\n\n// RequestService is created as a wrapper on top of axios. This is done in order to be able to\n// switch to new http-requests library if needed. Utilizing interfaces might be a good option here.\nexport class RequestService {\n  // Perform GET request with parameters.\n  static get(url, params = {}) {\n    return axios.get(\n      url,\n      { ...this.getDefaultAxiosConfig(), params },\n    );\n  }\n\n  // Generate default Axios configuration for requests.\n  // We may put here default timeouts etc.\n  static getDefaultAxiosConfig() {\n    return {\n      timeout: REQUEST_TIMEOUT,\n    };\n  }\n}\n","export const SEARCH_PARAMS_ACTION_TYPES = {\n  UPDATE_SEARCH_QUERY: 'UPDATE_SEARCH_QUERY',\n  UPDATE_SEARCH_OFFSET: 'UPDATE_SEARCH_OFFSET',\n};\n\n// Update the value of search query.\nexport function updateSearchQuery(searchQuery) {\n  return {\n    type: SEARCH_PARAMS_ACTION_TYPES.UPDATE_SEARCH_QUERY,\n    payload: searchQuery,\n  };\n}\n\n// Update current search offset.\nexport function updateSearchOffset(offset) {\n  return {\n    type: SEARCH_PARAMS_ACTION_TYPES.UPDATE_SEARCH_OFFSET,\n    payload: offset,\n  };\n}\n","import { SEARCH_PARAMS_ACTION_TYPES } from '../actions/searchParamsActions';\nimport { SEARCH_ACTION_TYPES } from '../actions/searchActions';\nimport { SEARCH_BATCH_SIZE } from '../config';\n\n/**\n * @typedef SearchParamsState\n * @type {object}\n * @property {string} query - search query string.\n * @property {number} limit - number of gifs that are being fetched per one search request.\n * @property {number} offset - offset of the search results.\n * @property {string} rating - gifs rating.\n * @property {string} lang - gifs language.\n */\n\n/**\n * @type {SearchParamsState}\n */\nexport const defaultSearchParams = {\n  query: '',\n  limit: SEARCH_BATCH_SIZE,\n  offset: 0,\n  rating: 'G',\n  lang: 'en',\n};\n\n// Search params reducer is responsible for storing current search parameters (query, offset etc.)\nexport const searchParamsReducer = (state = defaultSearchParams, action) => {\n  switch (action.type) {\n    case SEARCH_ACTION_TYPES.SEARCH_RESET:\n      return { ...defaultSearchParams };\n\n    case SEARCH_PARAMS_ACTION_TYPES.UPDATE_SEARCH_QUERY:\n      return { ...state, query: action.payload };\n\n    case SEARCH_PARAMS_ACTION_TYPES.UPDATE_SEARCH_OFFSET:\n      return { ...state, offset: action.payload };\n\n    default:\n      return state;\n  }\n};\n\n/**\n * Extracts search parameters from the store.\n * This is a helper function that allows us to change store structure easily\n * without changing the components.\n *\n * @param {object} state\n * @return {SearchParamsState}\n */\nexport const getSearchParamsFromState = state => state.searchParams;\n","import { RequestService } from './RequestService';\nimport { GIPHY_API_HOST, GIPHY_API_KEY } from '../config';\nimport { defaultSearchParams } from '../reducers/searchParamsReducer';\n\n// GiphyService is responsible for all integrations with Giphy API.\nexport class GiphyService {\n  // Search for GIFs by specific search query.\n  static search({\n    query = defaultSearchParams.query,\n    limit = defaultSearchParams.limit,\n    offset = defaultSearchParams.offset,\n    rating = defaultSearchParams.rating,\n    lang = defaultSearchParams.lang,\n  } = {}) {\n    const searchParams = {\n      api_key: GIPHY_API_KEY,\n      q: query,\n      limit,\n      offset,\n      rating,\n      lang,\n    };\n\n    return RequestService.get(\n      `${GIPHY_API_HOST}/v1/gifs/search`,\n      searchParams,\n    );\n  }\n}\n","import { ActionType } from 'redux-promise-middleware';\nimport { SEARCH_ACTION_TYPES } from '../actions/searchActions';\n\n/**\n * @typedef SearchResultsState\n * @type {object}\n * @property {*[]} data\n * @property {object} pagination\n * @property {object} meta\n * @property {boolean} isLoading\n * @property {boolean} isFetchingMore\n * @property {object} error\n */\n\n/**\n * @type {SearchResultsState}\n */\nexport const defaultSearchResults = {\n  data: [],\n  pagination: {},\n  meta: {},\n  isLoading: false,\n  isFetchingMore: false,\n  error: null,\n};\n\n// Search results reducer is responsible for storing information from Giphy API.\nexport const searchResultsReducer = (state = defaultSearchResults, action) => {\n  const payloadData = (action.payload && action.payload.data) || null;\n\n  switch (action.type) {\n    case SEARCH_ACTION_TYPES.SEARCH_RESET:\n      return { ...defaultSearchResults };\n\n    case `${SEARCH_ACTION_TYPES.SEARCH}_${ActionType.Pending}`:\n      return {\n        ...state,\n        isLoading: true,\n        isFetchingMore: false,\n        error: null,\n      };\n\n    case `${SEARCH_ACTION_TYPES.SEARCH_MORE}_${ActionType.Pending}`:\n      return {\n        ...state,\n        isLoading: false,\n        isFetchingMore: true,\n        error: null,\n      };\n\n    case `${SEARCH_ACTION_TYPES.SEARCH}_${ActionType.Fulfilled}`:\n      return {\n        ...state,\n        data: payloadData.data,\n        pagination: payloadData.pagination,\n        meta: payloadData.meta,\n        isLoading: false,\n        isFetchingMore: false,\n        error: null,\n      };\n\n    case `${SEARCH_ACTION_TYPES.SEARCH_MORE}_${ActionType.Fulfilled}`:\n      return {\n        ...state,\n        data: [...state.data].concat(payloadData.data),\n        pagination: payloadData.pagination,\n        meta: payloadData.meta,\n        isLoading: false,\n        isFetchingMore: false,\n        error: null,\n      };\n\n    case `${SEARCH_ACTION_TYPES.SEARCH}_${ActionType.Rejected}`:\n      return {\n        ...defaultSearchResults,\n        isLoading: false,\n        isFetchingMore: false,\n        error: true,\n      };\n\n    case `${SEARCH_ACTION_TYPES.SEARCH_MORE}_${ActionType.Rejected}`:\n      return {\n        ...state,\n        isLoading: false,\n        isFetchingMore: false,\n        error: true,\n      };\n\n    default:\n      return state;\n  }\n};\n\n/**\n * Extracts search results from the store.\n * This is a helper function that allows us to change store structure easily\n * without changing the components.\n *\n * @param {object} state\n * @return {SearchResultsState}\n */\nexport const getSearchResultsFromState = state => state.searchResults;\n","import { GiphyService } from '../services/GiphyService';\nimport { updateSearchOffset } from './searchParamsActions';\nimport { SEARCH_BATCH_SIZE } from '../config';\nimport { getSearchParamsFromState } from '../reducers/searchParamsReducer';\nimport { getSearchResultsFromState } from '../reducers/searchResultsReducer';\n\nexport const SEARCH_ACTION_TYPES = {\n  SEARCH: 'SEARCH',\n  SEARCH_MORE: 'SEARCH_MORE',\n  SEARCH_RESET: 'SEARCH_RESET',\n};\n\n// Search on GIPHY.\nexport function search(searchParams) {\n  return {\n    type: SEARCH_ACTION_TYPES.SEARCH,\n    payload: GiphyService.search(searchParams),\n  };\n}\n\n// Reset search parameters.\nexport function searchReset() {\n  return {\n    type: SEARCH_ACTION_TYPES.SEARCH_RESET,\n    payload: null,\n  };\n}\n\n// Fetch more search results from GIPHY.\nexport function searchMore(batchSize = SEARCH_BATCH_SIZE) {\n  return (dispatch, getState) => {\n    const state = getState();\n\n    // Fetch total number of results.\n    const { pagination = {}, isFetchingMore, isLoading } = getSearchResultsFromState(state);\n\n    const totalCount = pagination.total_count || 0;\n\n    // Don't fetch anything if fetching is in progress right now.\n    if (isFetchingMore || isLoading) {\n      return null;\n    }\n\n    // Fetch current offset from search params.\n    const searchParams = getSearchParamsFromState(state);\n    const offset = searchParams.offset + batchSize;\n    searchParams.offset = offset;\n\n    // Check whether we want to fetch more results that actually exists on the server.\n    if (offset >= totalCount) {\n      // Nothing to fetch.\n      return null;\n    }\n\n    // Update search offset in the store.\n    dispatch(updateSearchOffset(offset));\n\n    // Fetch new search results and put them to the store.\n    dispatch({\n      type: SEARCH_ACTION_TYPES.SEARCH_MORE,\n      payload: GiphyService.search(searchParams),\n    });\n\n    return null;\n  };\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { SearchResults } from '../../components/searchResults/SearchResults';\nimport { InfiniteScroll } from '../../components/shared/infiniteScroll/InfiniteScroll';\nimport { Spinner } from '../../components/shared/spinner/Spinner';\nimport { searchMore } from '../../actions/searchActions';\nimport { getSearchResultsFromState } from '../../reducers/searchResultsReducer';\n\nexport class SearchResultsContainer extends React.Component {\n  static propTypes = {\n    searchItems: PropTypes.arrayOf(PropTypes.object),\n    isLoading: PropTypes.bool,\n    isFetchingMore: PropTypes.bool,\n    searchMore: PropTypes.func.isRequired,\n  };\n\n  static defaultProps = {\n    searchItems: [],\n    isLoading: false,\n    isFetchingMore: false,\n  };\n\n  onFetchMore = () => {\n    const { isFetchingMore, isLoading, searchMore: searchMoreCallback } = this.props;\n\n    if (!isFetchingMore && !isLoading) {\n      searchMoreCallback();\n    }\n  };\n\n  render() {\n    const { searchItems, isLoading, isFetchingMore } = this.props;\n\n    const fetchMoreSpinner = isFetchingMore ? <Spinner /> : null;\n\n    return (\n      <InfiniteScroll onFetchMore={this.onFetchMore}>\n        <SearchResults searchItems={searchItems} isLoading={isLoading} />\n        {fetchMoreSpinner}\n      </InfiniteScroll>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const searchResults = getSearchResultsFromState(state);\n\n  return {\n    searchItems: searchResults.data || [],\n    isLoading: searchResults.isLoading || false,\n    isFetchingMore: searchResults.isFetchingMore || false,\n  };\n};\n\nconst mapDispatchToProps = {\n  searchMore,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(SearchResultsContainer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport class SearchSummary extends React.Component {\n  static propTypes = {\n    total: PropTypes.number,\n  };\n\n  static defaultProps = {\n    total: null,\n  };\n\n  render() {\n    const { total } = this.props;\n\n    if (total === null) {\n      return null;\n    }\n\n    return (\n      <div className=\"mb-3\">\n        <small>\n          Total results:\n          &nbsp;\n          <span className=\"badge badge-dark\">\n            {total}\n          </span>\n        </small>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { SearchSummary } from '../../components/searchSummary/SearchSummary';\nimport { getSearchResultsFromState } from '../../reducers/searchResultsReducer';\n\nexport class SearchSummaryContainer extends React.Component {\n  static propTypes = {\n    total: PropTypes.number,\n  };\n\n  static defaultProps = {\n    total: null,\n  };\n\n  render() {\n    const { total } = this.props;\n\n    return (\n      <SearchSummary total={total} />\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const searchResults = getSearchResultsFromState(state);\n  let totalCount = null;\n\n  if (\n    searchResults.isLoading === false\n    && searchResults.pagination\n    && Object.prototype.hasOwnProperty.call(searchResults.pagination, 'total_count')\n  ) {\n    totalCount = searchResults.pagination.total_count;\n  }\n\n  return {\n    total: totalCount,\n  };\n};\n\nexport default connect(mapStateToProps)(SearchSummaryContainer);\n","import React from 'react';\nimport SearchResultsContainerConnected from '../../containers/searchResultsContainer/SearchResultsContainer';\nimport SearchSummaryContainerConnected from '../../containers/searchSummaryContainer/SearchSummaryContainer';\n\nexport class SearchPage extends React.Component {\n  render() {\n    return (\n      <div>\n        <SearchSummaryContainerConnected />\n        <SearchResultsContainerConnected />\n      </div>\n    );\n  }\n}\n","const SEARCH_QUERY_PARAM = 'query';\n\nexport class RouterService {\n  constructor(history, location) {\n    this.history = history;\n    this.location = location;\n  }\n\n  pushSearchQuery(query = '') {\n    this.history.push({\n      search: query ? `?${SEARCH_QUERY_PARAM}=${query}` : '',\n    });\n  }\n\n  getSearchQuery() {\n    const searchParams = new URLSearchParams(this.location.search);\n    return searchParams.get(SEARCH_QUERY_PARAM);\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Route, Switch, withRouter } from 'react-router-dom';\nimport { SearchPage } from './components/searchPage/SearchPage';\nimport { RouterService } from './services/RouterService';\nimport { updateSearchQuery } from './actions/searchParamsActions';\nimport { search } from './actions/searchActions';\n\nexport class Routes extends React.Component {\n  static propTypes = {\n    routerService: PropTypes.instanceOf(RouterService).isRequired,\n    updateSearchQuery: PropTypes.func.isRequired,\n    search: PropTypes.func.isRequired,\n  };\n\n  componentDidMount() {\n    const {\n      routerService,\n      updateSearchQuery: searchQueryFromLocationCallback,\n      search: searchCallback,\n    } = this.props;\n\n    // Check if search query has been submitted through the URL.\n    // In case if search query is in URL we need to launch the search.\n    const searchQueryFromLocation = routerService.getSearchQuery();\n    if (searchQueryFromLocation) {\n      // Update search form parameters.\n      searchQueryFromLocationCallback(searchQueryFromLocation);\n      // Launch the search and populate the state with search results.\n      searchCallback({ query: searchQueryFromLocation });\n    }\n  }\n\n  render() {\n    // Currently we have only one route. But the next step of the App development might be to create\n    // a dedicated pages for each GIF with additional details. Or to display most trending GIFs\n    // on the /home and search results on the /search page.\n    return (\n      <Switch>\n        <Route path=\"/\" component={SearchPage} />\n      </Switch>\n    );\n  }\n}\n\nconst mapStateToProps = (state, props) => ({\n  routerService: new RouterService(props.history, props.location),\n});\n\nconst mapDispatchToProps = {\n  updateSearchQuery,\n  search,\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps,\n  )(Routes),\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './searchForm.css';\n\nconst inputMaxLength = 512;\n\nexport class SearchForm extends React.Component {\n  static propTypes = {\n    query: PropTypes.string,\n    onSearchSubmit: PropTypes.func,\n    onSearchUpdate: PropTypes.func,\n    onSearchReset: PropTypes.func,\n  };\n\n  static defaultProps = {\n    query: '',\n    onSearchSubmit: () => {},\n    onSearchUpdate: () => {},\n    onSearchReset: () => {},\n  };\n\n  onQueryChange = (event) => {\n    const { onSearchUpdate } = this.props;\n    const query = event.target.value;\n    onSearchUpdate(query);\n  };\n\n  onSearchSubmit = (event) => {\n    event.preventDefault();\n    const { onSearchSubmit, query } = this.props;\n    // Don't fire onSearchSubmit callback when search query is empty.\n    if (query) {\n      onSearchSubmit(query);\n    }\n  };\n\n  onSearchReset = (event) => {\n    event.preventDefault();\n    const { onSearchReset } = this.props;\n    onSearchReset();\n  };\n\n  render() {\n    const { query } = this.props;\n\n    const resetElement = query && query.length ? (\n      <div className=\"input-group-append\">\n        <button\n          className=\"btn btn-light search-reset\"\n          type=\"button\"\n          onClick={this.onSearchReset}\n          title=\"Reset search\"\n        >\n          <span className=\"oi oi-x\" />\n        </button>\n      </div>\n    ) : null;\n\n    return (\n      <form className=\"form\" onSubmit={this.onSearchSubmit}>\n        <div className=\"input-group\">\n          <input\n            className=\"form-control search-input\"\n            type=\"search\"\n            placeholder=\"Search for GIFs\"\n            value={query}\n            onChange={this.onQueryChange}\n            spellCheck={false}\n            autoCapitalize=\"off\"\n            autoComplete=\"off\"\n            maxLength={inputMaxLength}\n          />\n\n          {resetElement}\n\n          <div className=\"input-group-append\">\n            <button\n              className=\"btn btn-dark search-submit\"\n              type=\"submit\"\n              onClick={this.onSearchSubmit}\n              title=\"Search\"\n            >\n              <span className=\"oi oi-magnifying-glass\" />\n            </button>\n          </div>\n        </div>\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { SearchForm } from '../../components/searchForm/SearchForm';\nimport { search, searchReset } from '../../actions/searchActions';\nimport { updateSearchQuery } from '../../actions/searchParamsActions';\nimport { getSearchParamsFromState } from '../../reducers/searchParamsReducer';\nimport { RouterService } from '../../services/RouterService';\n\nexport class SearchFormContainer extends React.Component {\n  static propTypes = {\n    routerService: PropTypes.instanceOf(RouterService).isRequired,\n    search: PropTypes.func.isRequired,\n    searchReset: PropTypes.func.isRequired,\n    updateSearchQuery: PropTypes.func.isRequired,\n    query: PropTypes.string,\n  };\n\n  static defaultProps = {\n    query: '',\n  };\n\n  onSearchSubmit = (query) => {\n    const { search: searchCallback, routerService } = this.props;\n\n    // Update store.\n    searchCallback({ query });\n\n    // Update URL.\n    routerService.pushSearchQuery(query);\n  };\n\n  onSearchUpdate = (query) => {\n    const { updateSearchQuery: updateSearchQueryCallback } = this.props;\n\n    // Update store.\n    updateSearchQueryCallback(query);\n  };\n\n  onSearchReset = () => {\n    const { searchReset: searchResetCallback, routerService } = this.props;\n\n    // Update store.\n    searchResetCallback();\n\n    // Update URL.\n    routerService.pushSearchQuery();\n  };\n\n  render() {\n    const { query } = this.props;\n\n    return (\n      <SearchForm\n        query={query}\n        onSearchSubmit={this.onSearchSubmit}\n        onSearchUpdate={this.onSearchUpdate}\n        onSearchReset={this.onSearchReset}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = (state, props) => ({\n  routerService: new RouterService(props.history, props.location),\n  query: getSearchParamsFromState(state).query,\n});\n\nconst mapDispatchToProps = {\n  search,\n  searchReset,\n  updateSearchQuery,\n};\n\nexport default withRouter(connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(SearchFormContainer));\n","import React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport SearchFormContainerConnected from '../../../containers/searchFormContainer/SearchFormContainer';\nimport './header.css';\n\nclass HeaderRaw extends React.Component {\n  render() {\n    return (\n      <div>\n        <h1 className=\"text-center italic mt-5 mb-5 logo\">\n          <Link to=\"/\" className=\"text-dark\">\n            GiphyGram\n          </Link>\n        </h1>\n        <div className=\"mb-3\">\n          <SearchFormContainerConnected />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport const Header = withRouter(HeaderRaw);\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { Layout } from './components/shared/layout/Layout';\nimport RoutesConnected from './Routes';\nimport { Header } from './components/shared/header/Header';\nimport { storePropType } from './types/reduxTypes';\nimport { APP_BASE_URL } from './config';\nimport 'open-iconic/font/css/open-iconic-bootstrap.min.css';\n\nexport class App extends React.Component {\n  static propTypes = {\n    store: storePropType.isRequired,\n  };\n\n  render() {\n    const { store } = this.props;\n\n    return (\n      <Provider store={store}>\n        <BrowserRouter basename={APP_BASE_URL}>\n          <Layout>\n            <Header />\n            <RoutesConnected />\n          </Layout>\n        </BrowserRouter>\n      </Provider>\n    );\n  }\n}\n","import PropTypes from 'prop-types';\n\n// PropType for Redux store object.\nexport const storePropType = PropTypes.shape({\n  dispatch: PropTypes.func.isRequired,\n  getState: PropTypes.func.isRequired,\n  subscribe: PropTypes.func.isRequired,\n  replaceReducer: PropTypes.func.isRequired,\n});\n","import { combineReducers } from 'redux';\nimport { searchResultsReducer } from './searchResultsReducer';\nimport { searchParamsReducer } from './searchParamsReducer';\n\n// Root reducer will serve as a container for other reducers.\nexport const rootReducer = combineReducers({\n  searchResults: searchResultsReducer,\n  searchParams: searchParamsReducer,\n});\n","import { applyMiddleware, createStore, compose } from 'redux';\nimport promise from 'redux-promise-middleware';\nimport thunk from 'redux-thunk';\nimport { rootReducer } from './reducers/rootReducer';\n\n// Add support of browser Redux debugger.\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n// Add middleware to be able to use promises and chains of actions.\nconst middleware = applyMiddleware(\n  promise, // Allows to put promise() into action.payload.\n  thunk, // Allows to dispatch(function()) that will accept `dispatch` as a parameter.\n);\n\n// Create Redux store for the application.\nexport const store = createStore(\n  rootReducer,\n  composeEnhancers(middleware),\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport { store } from './store';\n\n// Get DOM container for React application.\nconst rootContainer = document.getElementById('root');\n\n// Render the application.\nReactDOM.render(\n  <App store={store} />,\n  rootContainer,\n);\n"],"sourceRoot":""}