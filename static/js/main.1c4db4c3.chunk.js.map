{"version":3,"sources":["components/shared/layout/Layout.js","types/giphyTypes.js","components/gifItem/GifItem.js","components/shared/spinner/Spinner.js","components/gifList/GifList.js","components/shared/infiniteScroll/InfiniteScroll.js","config.js","services/RequestService.js","actions/searchParamsActions.js","reducers/searchParamsReducer.js","services/GiphyService.js","actions/searchActions.js","reducers/searchResultsReducer.js","containers/gifList/GifListContainer.js","components/searchSummary/SearchSummary.js","containers/searchSummary/SearchSummaryContainer.js","components/home/Home.js","components/Routes.js","components/searchForm/SearchForm.js","containers/searchForm/SearchFormContainer.js","components/shared/header/Header.js","components/App.js","types/reduxTypes.js","reducers/rootReducer.js","store.js","index.js"],"names":["Layout","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","children","props","react_default","a","createElement","className","React","Component","gifImagePropType","PropTypes","shape","url","string","width","height","size","mp4","mp4_size","webp","webp_size","gifImagesPropType","fixed_height_still","original_still","fixed_width","fixed_height_small_still","fixed_height_downsampled","preview","fixed_height_small","downsized_still","downsized","downsized_large","fixed_width_small_still","preview_webp","fixed_width_still","fixed_width_small","downsized_small","fixed_width_downsampled","downsized_medium","original","fixed_height","looping","original_mp4","preview_gif","GifItem","title","_score","number","type","id","slug","bitly_gif_url","bitly_url","embed_url","username","source","rating","content_url","source_tld","source_post_url","is_sticker","import_datetime","trending_datetime","images","gif","href","border","src","alt","Spinner","GifList","_this$props","gifs","isLoading","Spinner_Spinner","gifsElements","map","GifItem_GifItem","defaultProps","InfiniteScroll","_getPrototypeOf2","_this","_len","length","args","Array","_key","call","concat","onScroll","activationDistance","onFetchMore","documentHeight","document","body","offsetHeight","window","innerHeight","scrollY","addEventListener","env","objectSpread","process","APP_BASE_URL","REACT_APP_BASE_URL","GIPHY_API_KEY","REACT_APP_GIPHY_API_KEY","GIPHY_API_HOST","REACT_APP_GIPHY_API_HOST","REQUEST_TIMEOUT","HTTP_REQUEST_TIMEOUT","SEARCH_BATCH_SIZE","RequestService","params","undefined","axios","get","getDefaultAxiosConfig","timeout","SEARCH_PARAMS_ACTION_TYPES","UPDATE_SEARCH_QUERY","UPDATE_SEARCH_OFFSET","defaultSearchParams","query","limit","offset","lang","getSearchParamsFromState","state","searchParams","GiphyService","_ref","_ref$query","_ref$limit","_ref$offset","_ref$rating","_ref$lang","api_key","q","SEARCH_ACTION_TYPES","SEARCH","SEARCH_MORE","SEARCH_RESET","initialState","data","pagination","meta","isFetchingMore","error","getSearchResultsFromState","searchResults","GifListDisconnected","searchMoreCallback","searchMore","_this$props2","fetchMoreSpinner","InfiniteScroll_InfiniteScroll","GifList_GifList","mapDispatchToProps","batchSize","dispatch","getState","payload","updateSearchOffset","search","GifListContainer","connect","SearchSummary","total","SearchSummaryDisconnected","SearchSummary_SearchSummary","SearchSummaryContainer","totalCount","prototype","hasOwnProperty","total_count","Home","Routes","withRouter","Switch","Route","path","component","SearchForm","onQueryChange","event","onSearchUpdate","target","onSearchSubmit","preventDefault","onSearchReset","resetElement","onClick","onSubmit","placeholder","onChange","spellCheck","autoCapitalize","autoComplete","maxLength","SearchFormDisconnected","searchCallback","updateSearchQueryCallback","updateSearchQuery","searchResetCallback","searchReset","SearchForm_SearchForm","searchQuery","SearchFormContainer","HeaderRaw","Link","to","Header","App","func","isRequired","subscribe","replaceReducer","store","es","BrowserRouter","basename","Layout_Layout","rootReducer","combineReducers","action","payloadData","ActionType","Pending","Fulfilled","toConsumableArray","Rejected","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middleware","applyMiddleware","promise","thunk","createStore","rootContainer","getElementById","ReactDOM","render","App_App"],"mappings":"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","file":"static/js/main.1c4db4c3.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport class Layout extends React.Component {\n  static propTypes = {\n    children: PropTypes.oneOfType([\n      PropTypes.arrayOf(PropTypes.node),\n      PropTypes.node,\n    ]).isRequired,\n  };\n\n  render() {\n    const { children } = this.props;\n\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col\">\n            {children}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import PropTypes from 'prop-types';\n\n// PropType for Giphy Image entity.\nexport const gifImagePropType = PropTypes.shape({\n  url: PropTypes.string,\n  width: PropTypes.string,\n  height: PropTypes.string,\n  size: PropTypes.string,\n  mp4: PropTypes.string,\n  mp4_size: PropTypes.string,\n  webp: PropTypes.string,\n  webp_size: PropTypes.string,\n});\n\n// PropType for Giphy images set.\nexport const gifImagesPropType = PropTypes.shape({\n  fixed_height_still: gifImagePropType,\n  original_still: gifImagePropType,\n  fixed_width: gifImagePropType,\n  fixed_height_small_still: gifImagePropType,\n  fixed_height_downsampled: gifImagePropType,\n  preview: gifImagePropType,\n  fixed_height_small: gifImagePropType,\n  downsized_still: gifImagePropType,\n  downsized: gifImagePropType,\n  downsized_large: gifImagePropType,\n  fixed_width_small_still: gifImagePropType,\n  preview_webp: gifImagePropType,\n  fixed_width_still: gifImagePropType,\n  fixed_width_small: gifImagePropType,\n  downsized_small: gifImagePropType,\n  fixed_width_downsampled: gifImagePropType,\n  downsized_medium: gifImagePropType,\n  original: gifImagePropType,\n  fixed_height: gifImagePropType,\n  looping: gifImagePropType,\n  original_mp4: gifImagePropType,\n  preview_gif: gifImagePropType,\n});\n\n// PropType for the Giphy search result entity.\nexport const gifItemPropType = PropTypes.shape({\n  title: PropTypes.string,\n  _score: PropTypes.number,\n  type: PropTypes.string,\n  id: PropTypes.string,\n  slug: PropTypes.string,\n  url: PropTypes.string,\n  bitly_gif_url: PropTypes.string,\n  bitly_url: PropTypes.string,\n  embed_url: PropTypes.string,\n  username: PropTypes.string,\n  source: PropTypes.string,\n  rating: PropTypes.string,\n  content_url: PropTypes.string,\n  source_tld: PropTypes.string,\n  source_post_url: PropTypes.string,\n  is_sticker: PropTypes.number,\n  import_datetime: PropTypes.string,\n  trending_datetime: PropTypes.string,\n  images: gifImagesPropType,\n});\n","import React from 'react';\nimport { gifItemPropType } from '../../types/giphyTypes';\n\nexport class GifItem extends React.Component {\n  static propTypes = {\n    gif: gifItemPropType.isRequired,\n  };\n\n  render() {\n    const { gif } = this.props;\n\n    return (\n      <div className=\"card mb-3\">\n        <a href={gif.url}>\n          <img\n            border=\"0\"\n            className=\"card-img-top\"\n            src={gif.images.fixed_width.url}\n            alt={gif.title}\n            title={gif.title}\n          />\n        </a>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './spinner.css';\n\nexport class Spinner extends React.Component {\n  render() {\n    return (\n      <div className=\"spinner-container mb-3 text-center\">\n        <div className=\"spinner\" />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { GifItem } from '../gifItem/GifItem';\nimport { Spinner } from '../shared/spinner/Spinner';\n\nexport class GifList extends React.Component {\n  static propTypes = {\n    gifs: PropTypes.arrayOf(PropTypes.object),\n    isLoading: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    gifs: [],\n    isLoading: false,\n  };\n\n  render() {\n    const { gifs, isLoading } = this.props;\n\n    if (isLoading) {\n      return <Spinner />;\n    }\n\n    const gifsElements = gifs.map(gif => (\n      <GifItem gif={gif} key={gif.id} />\n    ));\n\n    return (\n      <div className=\"mb-3\">\n        {gifsElements}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst DEFAULT_ACTIVATION_DISTANCE = 50;\n\nexport class InfiniteScroll extends React.Component {\n  static propTypes = {\n    children: PropTypes.arrayOf(PropTypes.element).isRequired,\n    onFetchMore: PropTypes.func,\n    activationDistance: PropTypes.number,\n  };\n\n  static defaultProps = {\n    onFetchMore: () => {},\n    activationDistance: DEFAULT_ACTIVATION_DISTANCE,\n  };\n\n  componentDidMount() {\n    window.addEventListener('scroll', this.onScroll, false);\n  }\n\n  onScroll = () => {\n    const { activationDistance, onFetchMore } = this.props;\n\n    const documentHeight = document.body.offsetHeight;\n    const scrollHeight = window.innerHeight + window.scrollY;\n\n    if ((scrollHeight + activationDistance) >= documentHeight) {\n      onFetchMore();\n    }\n  };\n\n  render() {\n    const { children } = this.props;\n\n    return (\n      <div>\n        {children}\n      </div>\n    );\n  }\n}\n","// Shortcut for environment variables container.\nconst env = { ...process.env };\n\n// Base URL of the App. It allows putting the APP into sub-folders on the server.\nexport const APP_BASE_URL = env.REACT_APP_BASE_URL;\n\n// GIPHY API key.\nexport const GIPHY_API_KEY = env.REACT_APP_GIPHY_API_KEY;\n\n// GIPHY API Host.\nexport const GIPHY_API_HOST = env.REACT_APP_GIPHY_API_HOST;\n\n// HTTP request timeout in milliseconds.\nexport const REQUEST_TIMEOUT = env.HTTP_REQUEST_TIMEOUT;\n\n// How many Gif images we want to request per each HTTP request.\nexport const SEARCH_BATCH_SIZE = 30;\n","import axios from 'axios';\nimport { REQUEST_TIMEOUT } from '../config';\n\n// RequestService is created as a wrapper on top of axios. This is done in order to be able to\n// switch to new http-requests library if needed. Utilizing interfaces might be a good option here.\nexport class RequestService {\n  // Perform GET request with parameters.\n  static get(url, params = {}) {\n    return axios.get(\n      url,\n      { ...this.getDefaultAxiosConfig(), params },\n    );\n  }\n\n  // Generate default Axios configuration for requests.\n  // We may put here default timeouts etc.\n  static getDefaultAxiosConfig() {\n    return {\n      timeout: REQUEST_TIMEOUT,\n    };\n  }\n}\n","export const SEARCH_PARAMS_ACTION_TYPES = {\n  UPDATE_SEARCH_QUERY: 'UPDATE_SEARCH_QUERY',\n  UPDATE_SEARCH_OFFSET: 'UPDATE_SEARCH_OFFSET',\n};\n\n// Update the value of search query.\nexport function updateSearchQuery(searchQuery) {\n  return {\n    type: SEARCH_PARAMS_ACTION_TYPES.UPDATE_SEARCH_QUERY,\n    payload: searchQuery,\n  };\n}\n\n// Update current search offset.\nexport function updateSearchOffset(offset) {\n  return {\n    type: SEARCH_PARAMS_ACTION_TYPES.UPDATE_SEARCH_OFFSET,\n    payload: offset,\n  };\n}\n","import { SEARCH_PARAMS_ACTION_TYPES } from '../actions/searchParamsActions';\nimport { SEARCH_ACTION_TYPES } from '../actions/searchActions';\nimport { SEARCH_BATCH_SIZE } from '../config';\n\n/**\n * @typedef SearchParamsState\n * @type {object}\n * @property {string} query - search query string.\n * @property {number} limit - number of gifs that are being fetched per one search request.\n * @property {number} offset - offset of the search results.\n * @property {string} rating - gifs rating.\n * @property {string} lang - gifs language.\n */\n\n/**\n * @type {SearchParamsState}\n */\nexport const defaultSearchParams = {\n  query: '',\n  limit: SEARCH_BATCH_SIZE,\n  offset: 0,\n  rating: 'G',\n  lang: 'en',\n};\n\n// Search params reducer is responsible for storing current search parameters (query, offset etc.)\nexport const searchParamsReducer = (state = defaultSearchParams, action) => {\n  switch (action.type) {\n    case SEARCH_ACTION_TYPES.SEARCH_RESET:\n      return { ...defaultSearchParams };\n\n    case SEARCH_PARAMS_ACTION_TYPES.UPDATE_SEARCH_QUERY:\n      return { ...state, query: action.payload };\n\n    case SEARCH_PARAMS_ACTION_TYPES.UPDATE_SEARCH_OFFSET:\n      return { ...state, offset: action.payload };\n\n    default:\n      return state;\n  }\n};\n\n/**\n * Extracts search parameters from the store.\n * This is a helper function that allows us to change store structure easily\n * without changing the components.\n *\n * @param {object} state\n * @return {SearchParamsState}\n */\nexport const getSearchParamsFromState = state => state.searchParams;\n","import { RequestService } from './RequestService';\nimport { GIPHY_API_HOST, GIPHY_API_KEY } from '../config';\nimport { defaultSearchParams } from '../reducers/searchParamsReducer';\n\n// GiphyService is responsible for all integrations with Giphy API.\nexport class GiphyService {\n  // Search for GIFs by specific search query.\n  static search({\n    query = defaultSearchParams.query,\n    limit = defaultSearchParams.limit,\n    offset = defaultSearchParams.offset,\n    rating = defaultSearchParams.rating,\n    lang = defaultSearchParams.lang,\n  } = {}) {\n    const searchParams = {\n      api_key: GIPHY_API_KEY,\n      q: query,\n      limit,\n      offset,\n      rating,\n      lang,\n    };\n\n    return RequestService.get(\n      `${GIPHY_API_HOST}/v1/gifs/search`,\n      searchParams,\n    );\n  }\n}\n","import { GiphyService } from '../services/GiphyService';\nimport { updateSearchOffset } from './searchParamsActions';\nimport { SEARCH_BATCH_SIZE } from '../config';\nimport { getSearchParamsFromState } from '../reducers/searchParamsReducer';\n\nexport const SEARCH_ACTION_TYPES = {\n  SEARCH: 'SEARCH',\n  SEARCH_MORE: 'SEARCH_MORE',\n  SEARCH_RESET: 'SEARCH_RESET',\n};\n\n// Search on GIPHY.\nexport function search(searchParams) {\n  return {\n    type: SEARCH_ACTION_TYPES.SEARCH,\n    payload: GiphyService.search(searchParams),\n  };\n}\n\n// Reset search parameters.\nexport function searchReset() {\n  return {\n    type: SEARCH_ACTION_TYPES.SEARCH_RESET,\n    payload: null,\n  };\n}\n\n// Fetch more search results from GIPHY.\nexport function searchMore(batchSize = SEARCH_BATCH_SIZE) {\n  return (dispatch, getState) => {\n    const state = getState();\n    const searchParams = getSearchParamsFromState(state);\n\n    const offset = searchParams.offset + batchSize;\n    searchParams.offset = offset;\n\n    updateSearchOffset(offset)(dispatch);\n\n    dispatch({\n      type: SEARCH_ACTION_TYPES.SEARCH_MORE,\n      payload: GiphyService.search(searchParams),\n    });\n  };\n}\n","import { ActionType } from 'redux-promise-middleware';\nimport { SEARCH_ACTION_TYPES } from '../actions/searchActions';\n\n/**\n * @typedef SearchResultsState\n * @type {object}\n * @property {*[]} data\n * @property {object} pagination\n * @property {object} meta\n * @property {boolean} isLoading\n * @property {boolean} isFetchingMore\n * @property {object} error\n */\n\n/**\n * @type {SearchResultsState}\n */\nconst initialState = {\n  data: [],\n  pagination: {},\n  meta: {},\n  isLoading: false,\n  isFetchingMore: false,\n  error: null,\n};\n\n// Giphy reducer is responsible for storing information from Giphy API.\nexport const searchResultsReducer = (state = initialState, action) => {\n  const payloadData = (action.payload && action.payload.data) || null;\n\n  switch (action.type) {\n    case SEARCH_ACTION_TYPES.SEARCH_RESET:\n      return { ...initialState };\n\n    case `${SEARCH_ACTION_TYPES.SEARCH}_${ActionType.Pending}`:\n      return {\n        ...state,\n        isLoading: true,\n        isFetchingMore: false,\n        error: null,\n      };\n\n    case `${SEARCH_ACTION_TYPES.SEARCH_MORE}_${ActionType.Pending}`:\n      return {\n        ...state,\n        isLoading: false,\n        isFetchingMore: true,\n        error: null,\n      };\n\n    case `${SEARCH_ACTION_TYPES.SEARCH}_${ActionType.Fulfilled}`:\n      return {\n        ...state,\n        data: payloadData.data,\n        pagination: payloadData.pagination,\n        meta: payloadData.meta,\n        isLoading: false,\n        isFetchingMore: false,\n        error: null,\n      };\n\n    case `${SEARCH_ACTION_TYPES.SEARCH_MORE}_${ActionType.Fulfilled}`:\n      return {\n        ...state,\n        data: [...state.data].concat(payloadData.data),\n        pagination: payloadData.pagination,\n        meta: payloadData.meta,\n        isLoading: false,\n        isFetchingMore: false,\n        error: null,\n      };\n\n    case `${SEARCH_ACTION_TYPES.SEARCH}_${ActionType.Rejected}`:\n      return {\n        ...initialState,\n        error: true,\n      };\n\n    case `${SEARCH_ACTION_TYPES.SEARCH_MORE}_${ActionType.Rejected}`:\n      return {\n        ...state,\n        isLoading: false,\n        isFetchingMore: false,\n        error: true,\n      };\n\n    default:\n      return state;\n  }\n};\n\n/**\n * Extracts search results from the store.\n * This is a helper function that allows us to change store structure easily\n * without changing the components.\n *\n * @param {object} state\n * @return {SearchResultsState}\n */\nexport const getSearchResultsFromState = state => state.searchResults;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { GifList } from '../../components/gifList/GifList';\nimport { InfiniteScroll } from '../../components/shared/infiniteScroll/InfiniteScroll';\nimport { Spinner } from '../../components/shared/spinner/Spinner';\nimport { searchMore } from '../../actions/searchActions';\nimport { getSearchResultsFromState } from '../../reducers/searchResultsReducer';\n\nclass GifListDisconnected extends React.Component {\n  static propTypes = {\n    searchResults: PropTypes.arrayOf(PropTypes.object),\n    isLoading: PropTypes.bool,\n    isFetchingMore: PropTypes.bool,\n    searchMore: PropTypes.func.isRequired,\n  };\n\n  static defaultProps = {\n    searchResults: [],\n    isLoading: false,\n    isFetchingMore: false,\n  };\n\n  onFetchMore = () => {\n    const { isFetchingMore, searchMore: searchMoreCallback } = this.props;\n\n    if (!isFetchingMore) {\n      searchMoreCallback();\n    }\n  };\n\n  render() {\n    const { searchResults, isLoading, isFetchingMore } = this.props;\n\n    const fetchMoreSpinner = isFetchingMore ? <Spinner /> : null;\n\n    return (\n      <InfiniteScroll onFetchMore={this.onFetchMore}>\n        <GifList gifs={searchResults} isLoading={isLoading} />\n        {fetchMoreSpinner}\n      </InfiniteScroll>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const searchResults = getSearchResultsFromState(state);\n\n  return {\n    searchResults: searchResults.data || [],\n    isLoading: searchResults.isLoading || false,\n    isFetchingMore: searchResults.isFetchingMore || false,\n  };\n};\n\nconst mapDispatchToProps = {\n  searchMore,\n};\n\nexport const GifListContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(GifListDisconnected);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport class SearchSummary extends React.Component {\n  static propTypes = {\n    total: PropTypes.number,\n  };\n\n  static defaultProps = {\n    total: null,\n  };\n\n  render() {\n    const { total } = this.props;\n\n    if (!total) {\n      return null;\n    }\n\n    return (\n      <div className=\"mb-3\">\n        <small>\n          Total results:\n          &nbsp;\n          <span className=\"badge badge-dark\">\n            {total}\n          </span>\n        </small>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { SearchSummary } from '../../components/searchSummary/SearchSummary';\nimport { getSearchResultsFromState } from '../../reducers/searchResultsReducer';\n\nclass SearchSummaryDisconnected extends React.Component {\n  static propTypes = {\n    total: PropTypes.number,\n  };\n\n  static defaultProps = {\n    total: 0,\n  };\n\n  render() {\n    const { total } = this.props;\n\n    return (\n      <SearchSummary total={total} />\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const searchResults = getSearchResultsFromState(state);\n  let totalCount = null;\n\n  if (\n    searchResults.isLoading === false\n    && searchResults.pagination\n    && Object.prototype.hasOwnProperty.call(searchResults.pagination, 'total_count')\n  ) {\n    totalCount = searchResults.pagination.total_count;\n  }\n\n  return {\n    total: totalCount,\n  };\n};\n\nexport const SearchSummaryContainer = connect(mapStateToProps)(SearchSummaryDisconnected);\n","import React from 'react';\nimport { GifListContainer } from '../../containers/gifList/GifListContainer';\nimport { SearchSummaryContainer } from '../../containers/searchSummary/SearchSummaryContainer';\n\nexport class Home extends React.Component {\n  render() {\n    return (\n      <div>\n        <SearchSummaryContainer />\n        <GifListContainer />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Route, Switch, withRouter } from 'react-router-dom';\nimport { Home } from './home/Home';\n\n// Currently we have only one route. But the next step of the App development might be to create\n// a dedicated pages for each GIF with additional details. Or to display most trending GIFs\n// on the /home and search results on the /search page.\nconst RoutesRaw = () => (\n  <Switch>\n    <Route path=\"/\" component={Home} />\n  </Switch>\n);\n\nexport const Routes = withRouter(RoutesRaw);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './searchForm.css';\n\nconst inputMaxLength = 512;\n\nexport class SearchForm extends React.Component {\n  static propTypes = {\n    query: PropTypes.string,\n    onSearchSubmit: PropTypes.func,\n    onSearchUpdate: PropTypes.func,\n    onSearchReset: PropTypes.func,\n  };\n\n  static defaultProps = {\n    query: '',\n    onSearchSubmit: () => {},\n    onSearchUpdate: () => {},\n    onSearchReset: () => {},\n  };\n\n  onQueryChange = (event) => {\n    const { onSearchUpdate } = this.props;\n    const query = event.target.value;\n    onSearchUpdate(query);\n  };\n\n  onSearchSubmit = (event) => {\n    event.preventDefault();\n    const { onSearchSubmit, query } = this.props;\n    onSearchSubmit(query);\n  };\n\n  onSearchReset = (event) => {\n    event.preventDefault();\n    const { onSearchReset } = this.props;\n    onSearchReset();\n  };\n\n  render() {\n    const { query } = this.props;\n\n    const resetElement = query && query.length ? (\n      <div className=\"input-group-append\">\n        <button\n          className=\"btn btn-light search-reset\"\n          type=\"button\"\n          onClick={this.onSearchReset}\n          title=\"Reset search\"\n        >\n          <span className=\"oi oi-x\" />\n        </button>\n      </div>\n    ) : null;\n\n    return (\n      <form className=\"form\" onSubmit={this.onSearchSubmit}>\n        <div className=\"input-group\">\n          <input\n            className=\"form-control search-input\"\n            type=\"search\"\n            placeholder=\"Search for GIFs\"\n            value={query}\n            onChange={this.onQueryChange}\n            spellCheck={false}\n            autoCapitalize=\"off\"\n            autoComplete=\"off\"\n            maxLength={inputMaxLength}\n          />\n\n          {resetElement}\n\n          <div className=\"input-group-append\">\n            <button\n              className=\"btn btn-dark search-submit\"\n              type=\"submit\"\n              onClick={this.onSearchSubmit}\n              title=\"Search\"\n            >\n              <span className=\"oi oi-magnifying-glass\" />\n            </button>\n          </div>\n        </div>\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { SearchForm } from '../../components/searchForm/SearchForm';\nimport { search, searchReset } from '../../actions/searchActions';\nimport { updateSearchQuery } from '../../actions/searchParamsActions';\nimport { getSearchParamsFromState } from '../../reducers/searchParamsReducer';\n\nclass SearchFormDisconnected extends React.Component {\n  static propTypes = {\n    search: PropTypes.func.isRequired,\n    searchReset: PropTypes.func.isRequired,\n    updateSearchQuery: PropTypes.func.isRequired,\n    query: PropTypes.string,\n  };\n\n  static defaultProps = {\n    query: '',\n  };\n\n  onSearchSubmit = (query) => {\n    const { search: searchCallback } = this.props;\n    searchCallback({ query });\n  };\n\n  onSearchUpdate = (query) => {\n    const { updateSearchQuery: updateSearchQueryCallback } = this.props;\n    updateSearchQueryCallback(query);\n  };\n\n  onSearchReset = () => {\n    const { searchReset: searchResetCallback } = this.props;\n    searchResetCallback();\n  };\n\n  render() {\n    const { query } = this.props;\n\n    return (\n      <SearchForm\n        query={query}\n        onSearchSubmit={this.onSearchSubmit}\n        onSearchUpdate={this.onSearchUpdate}\n        onSearchReset={this.onSearchReset}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  query: getSearchParamsFromState(state).query,\n});\n\nconst mapDispatchToProps = {\n  search,\n  searchReset,\n  updateSearchQuery,\n};\n\nexport const SearchFormContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(SearchFormDisconnected);\n","import React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { SearchFormContainer } from '../../../containers/searchForm/SearchFormContainer';\nimport './header.css';\n\nclass HeaderRaw extends React.Component {\n  render() {\n    return (\n      <div>\n        <h1 className=\"text-center italic mt-5 mb-5 logo\">\n          <Link to=\"/\" className=\"text-dark\">\n            GiphyGram\n          </Link>\n        </h1>\n        <div className=\"mb-3\">\n          <SearchFormContainer />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport const Header = withRouter(HeaderRaw);\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { Layout } from './shared/layout/Layout';\nimport { Routes } from './Routes';\nimport { Header } from './shared/header/Header';\nimport 'open-iconic/font/css/open-iconic-bootstrap.min.css';\nimport { storePropType } from '../types/reduxTypes';\nimport { APP_BASE_URL } from '../config';\n\nexport class App extends React.Component {\n  static propTypes = {\n    store: storePropType.isRequired,\n  };\n\n  render() {\n    const { store } = this.props;\n\n    return (\n      <Provider store={store}>\n        <BrowserRouter basename={APP_BASE_URL}>\n          <Layout>\n            <Header />\n            <Routes />\n          </Layout>\n        </BrowserRouter>\n      </Provider>\n    );\n  }\n}\n","import PropTypes from 'prop-types';\n\n// PropType for Redux store object.\nexport const storePropType = PropTypes.shape({\n  dispatch: PropTypes.func.isRequired,\n  getState: PropTypes.func.isRequired,\n  subscribe: PropTypes.func.isRequired,\n  replaceReducer: PropTypes.func.isRequired,\n});\n","import { combineReducers } from 'redux';\nimport { searchResultsReducer } from './searchResultsReducer';\nimport { searchParamsReducer } from './searchParamsReducer';\n\n// Root reducer will serve as a container for other reducers.\nexport const rootReducer = combineReducers({\n  searchResults: searchResultsReducer,\n  searchParams: searchParamsReducer,\n});\n","import { applyMiddleware, createStore, compose } from 'redux';\nimport promise from 'redux-promise-middleware';\nimport thunk from 'redux-thunk';\nimport { rootReducer } from './reducers/rootReducer';\n\n// Add support of browser Redux debugger.\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n// Add middleware to be able to use promises and chains of actions.\nconst middleware = applyMiddleware(\n  promise, // Allows to put promise() into action.payload.\n  thunk, // Allows to dispatch(function()) that will accept `dispatch` as a parameter.\n);\n\n// Create Redux store for the application.\nexport const store = createStore(\n  rootReducer,\n  composeEnhancers(middleware),\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './components/App';\nimport { store } from './store';\n\n// Get DOM container for React application.\nconst rootContainer = document.getElementById('root');\n\n// Render the application.\nReactDOM.render(\n  <App store={store} />,\n  rootContainer,\n);\n"],"sourceRoot":""}